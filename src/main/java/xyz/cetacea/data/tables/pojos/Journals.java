/*
 * This file is generated by jOOQ.
*/
package xyz.cetacea.data.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Journals implements Serializable {

    private static final long serialVersionUID = 1409033440;

    private Integer   id;
    private String    entry;
    private Timestamp timestamp;
    private Integer   userId;

    public Journals() {}

    public Journals(Journals value) {
        this.id = value.id;
        this.entry = value.entry;
        this.timestamp = value.timestamp;
        this.userId = value.userId;
    }

    public Journals(
        Integer   id,
        String    entry,
        Timestamp timestamp,
        Integer   userId
    ) {
        this.id = id;
        this.entry = entry;
        this.timestamp = timestamp;
        this.userId = userId;
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getEntry() {
        return this.entry;
    }

    public void setEntry(String entry) {
        this.entry = entry;
    }

    public Timestamp getTimestamp() {
        return this.timestamp;
    }

    public void setTimestamp(Timestamp timestamp) {
        this.timestamp = timestamp;
    }

    public Integer getUserId() {
        return this.userId;
    }

    public void setUserId(Integer userId) {
        this.userId = userId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Journals other = (Journals) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (entry == null) {
            if (other.entry != null)
                return false;
        }
        else if (!entry.equals(other.entry))
            return false;
        if (timestamp == null) {
            if (other.timestamp != null)
                return false;
        }
        else if (!timestamp.equals(other.timestamp))
            return false;
        if (userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!userId.equals(other.userId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.entry == null) ? 0 : this.entry.hashCode());
        result = prime * result + ((this.timestamp == null) ? 0 : this.timestamp.hashCode());
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Journals (");

        sb.append(id);
        sb.append(", ").append(entry);
        sb.append(", ").append(timestamp);
        sb.append(", ").append(userId);

        sb.append(")");
        return sb.toString();
    }
}
